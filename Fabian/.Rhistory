load("~/_Studium/Sem3/SW/Statistik-R/algorithms.Rdata")
boxplot(runningtimes, col=c('red', 'green'), xlab='Seconds', horizontal = TRUE )
title("Running Time of two Alogrithms")
load("~/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/algorithms.Rdata")
load("~/_Studium/Sem3/SW/Statistik-R/algorithms.Rdata")
boxplot(runningtimes, col=c('red', 'green'), xlab='Seconds', horizontal = TRUE )
title("Running Time of two Alogrithms")
load('algorithms.Rdata', data <- new.env())
ls.str(data)
#boxplot(runningtimes, col = c('powderblue', 'mistyrose'))
c1 <- rainbow(2)
c2 <- rainbow(2, alpha=0.2)
c3 <- rainbow(2, v=0.7)
boxplot(runningtimes, ylab = 'runningtime', col=c2, medcol=c3, whiskcol=c1, staplecol=c3, boxcol=c3, outcol=c3)
load('algorithms.Rdata', data <- new.env())
ls.str(data)
boxplot(runningtimes, col = c('powderblue', 'mistyrose'))
c1 <- rainbow(2)
c2 <- rainbow(2, alpha=0.2)
c3 <- rainbow(2, v=0.7)
#boxplot(runningtimes, ylab = 'runningtime', col=c2, medcol=c3, whiskcol=c1, staplecol=c3, boxcol=c3, outcol=c3)
load('algorithms.Rdata', data <- new.env())
ls.str(data)
boxplot(runningtimes, ylab = 'runningtime', col = c('powderblue', 'mistyrose'))
c1 <- rainbow(2)
c2 <- rainbow(2, alpha=0.2)
c3 <- rainbow(2, v=0.7)
#boxplot(runningtimes, ylab = 'runningtime', col=c2, medcol=c3, whiskcol=c1, staplecol=c3, boxcol=c3, outcol=c3)
load('algorithms.Rdata', data <- new.env())
ls.str(data)
boxplot(runningtimes, xlab = 'runningtime', hoirzontal = TRUE, col = c('powderblue', 'mistyrose'))
c1 <- rainbow(2)
c2 <- rainbow(2, alpha=0.2)
load('algorithms.Rdata', data <- new.env())
ls.str(data)
boxplot(runningtimes, xlab = 'runningtime', horizontal = TRUE, col = c('powderblue', 'mistyrose'))
c1 <- rainbow(2)
c2 <- rainbow(2, alpha=0.2)
c3 <- rainbow(2, v=0.7)
#(a)
x = seq(-4,4,0.1)
y = dnorm(x)
plot(x, y, type = "l")
#(b)
abline(v = qnorm(0.025, 0, 1), col = "red")
abline(v=qnorm(0.975, 0, 1), col = "red")
abline(v = qnorm(0.005, 0, 1), col = "blue")
abline(v=qnorm(0.995, 0, 1), col = "blue")
abline(v = qnorm(0.0005, 0, 1), col = "green")
abline(v=qnorm(0.9995, 0, 1), col = "green")
#(a)
x = seq(-4,4,0.1)
y = dnorm(x)
plot(x, y, type = "l")
#(b)
abline(v = qnorm(0.025, 0, 1), col = "red")
abline(v=qnorm(0.975, 0, 1), col = "red")
abline(v = qnorm(0.005, 0, 1), col = "blue")
abline(v=qnorm(0.995, 0, 1), col = "blue")
abline(v = qnorm(0.0005, 0, 1), col = "green")
abline(v=qnorm(0.9995, 0, 1), col = "green")
df2 = 4*3-3
mx = 3
my = 4
mz = 5
ma = 4
den = 1+0+0+1  +  1+0+0+1   + 1+0+0+1
den = den/df2
den
num = 4*1+0+4*1
num = num/df1
num
f = num/den
f
df1 = 3-1
df2 = 4*3-3
# b) calculate f-Statistic
mx = 3
my = 4
mz = 5
ma = 4
den = 1+0+0+1  +  1+0+0+1   + 1+0+0+1
den = den/df2
den
num = 4*1+0+4*1
num = num/df1
num
f = num/den
f
#(2) Processor - Part 1
#(a)
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp, method ="jitter", pch=1)
stripchart(temp, method ="jitter", pch=1)
#(2) Processor - Part 1
#(a)
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp, method ="jitter", pch=1)
# AUFGABE 2
load("~/_Studium/Sem3/SW/Statistik-R/temperatures.Rdata")
stripchart(temp, method ="jitter", pch=1)
stripchart(temp, method ="jitter", pch=1)
stripchart(temp, method ="jitter")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter", pch=1)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter", pch=16)
#(2) Processor - Part 1
#(a)
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, v=0.7), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, v=1), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, v=2), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, v=0.5), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, v=0.8), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.2), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.8), pch=16)
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
stripchart(temp, method ="jitter", pch=1)
# b) mean and sem
for (i in seq(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col="blue", lwd = 2)
segments(m-sem,i+0.3,m-sem,i-0.3, col="red", lwd = 2)
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red", lwd = 2)
}
#(2) Processor - Part 1
#(a)
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
# AUFGABE 2
load("~/_Studium/Sem3/SW/Statistik-R/temperatures.Rdata")
stripchart(temp, method ="jitter", pch=1)
# b) mean and sem
for (i in seq(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col="blue")
segments(m-sem,i+0.3,m-sem,i-0.3, col="red", lwd = 2)
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red", lwd = 2)
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
for (i in c(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col="blue", lwd = 2)
segments(m-sem,i+0.3,m-sem,i-0.3, col="red", lwd = 2)
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red", lwd = 2)
}
for (i in seq(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col="blue", lwd = 2)
segments(m-sem,i+0.3,m-sem,i-0.3, col="red", lwd = 2)
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red", lwd = 2)
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5)
for (i in seq(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col=colRain[i], lwd = 2)
segments(m-sem,i+0.3,m-sem,i-0.3, col="red", lwd = 2)
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red", lwd = 2)
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
for (i in seq(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col=colRain[i], lwd = 2)
segments(m-sem,i+0.3,m-sem,i-0.3, col="red", lwd = 2)
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red", lwd = 2)
}
load('algorithms.Rdata', data <- new.env())
ls.str(data)
c1 <- rainbow(2)
c2 <- rainbow(2, alpha=0.2)
c3 <- rainbow(2, v=0.7)
boxplot(runningtimes, ylab = 'runningtime', col=c2, medcol=c3, whiskcol=c1, staplecol=c3, boxcol=c3, outcol=c3)
#boxplot(runningtimes, col = c('powderblue', 'mistyrose'))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
for (i in seq(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col=colRain[i], lwd = 2)
segments(m-sem,i+0.3,m-sem,i-0.3, col="red", lwd = 2)
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red", lwd = 2)
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
m = mean(temp[[i]])
sem = sd(temp[[i]])/sqrt(length(temp[[i]]))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
m = 0
for (i in seq(length(temp))) {
xi = temp[[i]]
m = m + mean(xi)
}
m = m/length(temp)
m
m = (mean(temp[[1]]) + mean(temp[[2]]) + mean(temp[[3]]) + mean(temp[[4]]) + mean(temp[[5]]))/5
m
m = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
m = m + mean(xi)
}
m = m/length(temp)
m
um = 0
n = 0
gmean = 0
for (i in seq(1,length(temp))) {
sum = sum + sum((temp[[i]]-mean(temp[[i]]))^2)
n = n+length(temp[[i]])
gmean =gmean + sum(temp[[i]])
}
den = sum/(n-length(temp))
gmean = gmean/n
gmean = gmean/n
sum = 0
for (i in seq(1,length(temp))) {
sum = sum + length(temp[[i]])*(mean(temp[[i]])-gmean)^2
}
nom = sum/(length(temp)-1)
f = nom/den
f
m = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
m = m + mean(xi)
}
m = m/length(temp)
m
sum1 = 0
sum2 = 0
n = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
n = n + length(xi)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
sum = 0
n = 0
gmean = 0
for (i in seq(1,length(temp))) {
sum = sum + sum((temp[[i]]-mean(temp[[i]]))^2)
n = n+length(temp[[i]])
gmean =gmean + sum(temp[[i]])
}
den = sum/(n-length(temp))
gmean = gmean/n
sum = 0
for (i in seq(1,length(temp))) {
sum = sum + length(temp[[i]])*(mean(temp[[i]])-gmean)^2
}
nom = sum/(length(temp)-1)
f = nom/den
f
m = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
m = m + mean(xi)
}
m = m/length(temp)
m
sum1 = 0
sum2 = 0
n = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
n = n + length(xi)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
p = 1-pf(f,length(temp)-1, n-length(temp))
p
sum = 0
n = 0
gmean = 0
for (i in seq(1,length(temp))) {
sum = sum + sum((temp[[i]]-mean(temp[[i]]))^2)
n = n+length(temp[[i]])
gmean =gmean + sum(temp[[i]])
}
den = sum/(n-length(temp))
gmean = gmean/n
sum = 0
for (i in seq(1,length(temp))) {
sum = sum + length(temp[[i]])*(mean(temp[[i]])-gmean)^2
}
nom = sum/(length(temp)-1)
f = nom/den
f
1-pf(f,length(temp)-1, n-length(temp))
#(a)
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
m = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
m = m + mean(xi)
}
m = m/length(temp)
m
sum1 = 0
sum2 = 0
n = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
n = n + length(xi)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
p = 1-pf(f,length(temp)-1, n-length(temp))
p
m = 0
n = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
n = n + length(xi)
m = m + sum(xi)
}
m = m/n
m
sum1 = 0
sum2 = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
p = 1-pf(f,length(temp)-1, n-length(temp))
p
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1,length(temp))) {
p = t.test(temp[[i]], temp[[j]])$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
cat
?cat
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(13,15,24,11,14)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
x <- c(temp[[1]],temp[[2]], temp[[3]], temp[[4]], temp[[5]])
# Gruppen als Faktorvariable
gr <- factor(rep(1:5,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,4,4,3)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
p
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(13,15,24,11,14)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
x <- c(temp[[1]],temp[[2]], temp[[3]], temp[[4]], temp[[5]])
# Gruppen als Faktorvariable
gr <- factor(rep(1:5,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
