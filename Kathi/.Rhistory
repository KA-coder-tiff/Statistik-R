anova(aov(x~gr))
#(2) Processor - Part 1
#(a)
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(3) Processor - Part 2
m = 0
n = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
n = n + length(xi)
m = m + sum(xi)
}
m = m/n
m
sum1 = 0
sum2 = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
p = 1-pf(f,length(temp)-1, n-length(temp))
p
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(13,15,24,11,14)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
x <- c(temp[[1]],temp[[2]], temp[[3]], temp[[4]], temp[[5]])
# Gruppen als Faktorvariable
gr <- factor(rep(1:5,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(7) Distribution of the P-value in simulations
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
m
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
m
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
closeAllConnections()
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
#(2) Processor - Part 1
#(a)
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(3) Processor - Part 2
m = 0
n = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
n = n + length(xi)
m = m + sum(xi)
}
m = m/n
m
sum1 = 0
sum2 = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
p = 1-pf(f,length(temp)-1, n-length(temp))
p
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(13,15,24,11,14)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
x <- c(temp[[1]],temp[[2]], temp[[3]], temp[[4]], temp[[5]])
# Gruppen als Faktorvariable
gr <- factor(rep(1:5,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
m
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(7) Distribution of the P-value in simulations
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i,m,i, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.4,m,i-0.4, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.4,m,i-0.4, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(3) Processor - Part 2
m = 0
n = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
n = n + length(xi)
m = m + sum(xi)
}
m = m/n
m
sum1 = 0
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(7) Distribution of the P-value in simulations
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
# (1) Einstichproben-Test für Anteile (mit R)
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
clearPushBack()
# (1) Einstichproben-Test für Anteile (mit R)
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
cle
58
58
58
58
58
58
h = 17/n
p = 0.5
var = h*(1-h)/n
se = sqrt(var)
z = (h-p)/se
p = 2*pnorm(z)
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
n = 58
h = 17/n
p = 0.5
var = h*(1-h)/n
se = sqrt(var)
z = (h-p)/se
p = 2*pnorm(z)
p
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
h-p0
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
abs(h-p0)
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
abs(h-p0) # ~
se*4
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
abs(h-p0) # ~
se*3.5
n = 49
h = 0.5
p0 = 0.4
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
n = 144
h = 0.5
p0 = 0.4
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
n = 58
h = 17/n
p = 0.5
var = h*(1-h)/n
se = sqrt(var)
z = (h-p)/se
p = 2*pnorm(z)
p
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
par(mfrow=c(2,1))
x1 = matrix(table(umfrage[[1]]),2)
n1 = sum(x1)
barplot(x1, main="VO besucht", horiz = TRUE)
p1 = x1[1][1]/n1
var1 = p1*(1-p1)/n1
s1 = sqrt(var1)
abline(v=(p1+s1)*n1, col="red")
abline(v=(p1-s1)*n1, col="red")
load("~/_Studium/Sem3/SW/Statistik-R/Umfrage.Rdata")
# a)
par(mfrow=c(2,1))
x1 = matrix(table(umfrage[[1]]),2)
n1 = sum(x1)
barplot(x1, main="VO besucht", horiz = TRUE)
p1 = x1[1][1]/n1
var1 = p1*(1-p1)/n1
s1 = sqrt(var1)
abline(v=(p1+s1)*n1, col="red")
abline(v=(p1-s1)*n1, col="red")
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/Umfrage.Rdata")
par(mfrow=c(2,1))
x1 = matrix(table(umfrage[[1]]),2)
n1 = sum(x1)
barplot(x1, main="VO besucht", horiz = TRUE)
p1 = x1[1][1]/n1
var1 = p1*(1-p1)/n1
s1 = sqrt(var1)
abline(v=(p1+s1)*n1, col="red")
abline(v=(p1-s1)*n1, col="red")
x2 = matrix(table(umfrage[[2]]),2)
n2 = sum(x2)
barplot(x2, main="VO nicht besucht", horiz = TRUE)
p2 = x2[1][1]/n2
var2 = p2*(1-p2)/n2
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/Umfrage.Rdata")
par(mfrow=c(2,1))
x1 = matrix(table(umfrage[[1]]),2)
n1 = sum(x1)
barplot(x1, main="VO besucht", horiz = TRUE)
p1 = x1[1][1]/n1
var1 = p1*(1-p1)/n1
s1 = sqrt(var1)
abline(v=(p1+s1)*n1, col="red")
abline(v=(p1-s1)*n1, col="red")
x2 = matrix(table(umfrage[[2]]),2)
n2 = sum(x2)
barplot(x2, main="VO nicht besucht", horiz = TRUE)
p2 = x2[1][1]/n2
var2 = p2*(1-p2)/n2
s2 = sqrt(var2)
abline(v=(p2+s2)*n2, col="red")
abline(v=(p2-s2)*n2, col="red")
par(mfrow=c(1,1))
prop.test(matrix(c(x1,x2),2), c(n1,n2))
z = (p1-p2)/sqrt(s1^2+s2^2)
2*pnorm(z)
table(umfrage[[1]])
temp = table(umfrage[[1]])
x1 = matrix(table(umfrage[[1]]),2)
View(x1)
# (1) Einstichproben-Test für Anteile (mit R)
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
abs(h-p0) # ~ 3.5*se
n=58
p0 = 0.5
h = 17/n
se = sqrt((h*(1-h))/n)
z = (h-p0)/se
p = 2*pnorm(z)
p
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/Umfrage.Rdata")
par(mfrow=c(2,1))
x1 = matrix(table(umfrage[[1]]),2)
n1 = sum(x1)
barplot(x1, main="VO besucht", horiz = TRUE)
p1 = x1[1][1]/n1
var1 = p1*(1-p1)/n1
s1 = sqrt(var1)
abline(v=(p1+s1)*n1, col="red")
abline(v=(p1-s1)*n1, col="red")
x2 = matrix(table(umfrage[[2]]),2)
n2 = sum(x2)
barplot(x2, main="VO nicht besucht", horiz = TRUE)
p2 = x2[1][1]/n2
var2 = p2*(1-p2)/n2
s2 = sqrt(var2)
abline(v=(p2+s2)*n2, col="red")
abline(v=(p2-s2)*n2, col="red")
par(mfrow=c(1,1))
prop.test(matrix(c(x1,x2),2), c(n1,n2))
z = (p1-p2)/sqrt(s1^2+s2^2)
2*pnorm(z)
