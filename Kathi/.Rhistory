meanB = mean(b)
semA2 = var(a)/length(a)
semB2 = var(b)/length(b)
tAB = (meanB-meanA)/(sqrt(semA2+ semB2))
tAB
2*(1-pnorm(tAB))
t.test(b, a, conf.level = 0.99)
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Data/waitingtimes2.Rdata")
a = wt[[1]]
b = wt[[2]]
par(mfrow=c(2,1))
hist(a)
hist(b)
#par(mforw=c(1,1))
meanA = mean(a)
meanB = mean(b)
semA2 = var(a)/length(a)
semB2 = var(b)/length(b)
tAB = (meanB-meanA)/(sqrt(semA2+ semB2))
tAB
2*(1-pnorm(tAB))
t.test(b, a, conf.level = 0.99)
a = wt[[1]]
b = wt[[2]]
par(mfrow=c(2,1))
hist(a)
hist(b)
#par(mforw=c(1,1))
meanA = mean(a)
meanB = mean(b)
semA2 = var(a)/length(a)
semB2 = var(b)/length(b)
tAB = (meanB-meanA)/(sqrt(semA2+ semB2))
tAB
2*(1-pnorm(tAB))
t.test(b, a, conf.level = 0.99)
d = seq(-5,5,0.5)
par(mfrow=c(3,1))
# a)
n = 10
s = 3
i = 1
x = c()
for (d in seq(-5,5,0.5)) {
p = replicate(1000, t.test(rnorm(n,0,s), rnorm(n,d,s))$p.value)
x[i] = sum(p<=0.05)/1000
i=i+1
}
plot(seq(-5,5,0.5),x,type = 'l')
# b)
n = 20
s = 3
i = 1
x = c()
for (d in seq(-5,5,0.5)) {
p = replicate(1000, t.test(rnorm(n,0,s), rnorm(n,d,s))$p.value)
x[i] = sum(p<=0.05)/1000
i=i+1
}
plot(seq(-5,5,0.5),x,type = 'l')
# c)
n = 20
s = 1
i = 1
x = c()
for (d in seq(-5,5,0.5)) {
p = replicate(1000, t.test(rnorm(n,0,s), rnorm(n,d,s))$p.value)
x[i] = sum(p<=0.05)/1000
i=i+1
}
plot(seq(-5,5,0.5),x,type = 'l')
x
#t = -0.7 nahe bei 0 -> akzeptiert bzw. nicht verworfen
20/sqrt(50)
#t = -0.7 nahe bei 0 -> akzeptiert bzw. nicht verworfen
pnorm(-0.7)*2
# AUFGAB 7
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(13,15,24,11,14)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
x <- c(temp[[1]],temp[[2]], temp[[3]], temp[[4]], temp[[5]])
# Gruppen als Faktorvariable
gr <- factor(rep(1:5,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
#(2) Processor - Part 1
#(a)
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(2) Processor - Part 1
#(a)
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(3) Processor - Part 2
m = 0
n = 0
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
#(2) Processor - Part 1
#(a)
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(3) Processor - Part 2
m = 0
n = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
n = n + length(xi)
m = m + sum(xi)
}
m = m/n
m
sum1 = 0
sum2 = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
p = 1-pf(f,length(temp)-1, n-length(temp))
p
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(13,15,24,11,14)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
x <- c(temp[[1]],temp[[2]], temp[[3]], temp[[4]], temp[[5]])
# Gruppen als Faktorvariable
gr <- factor(rep(1:5,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(7) Distribution of the P-value in simulations
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
m
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
m
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
closeAllConnections()
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(4,4,4)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
g1 = c(2,3,3,4)
g2 = c(3,4,4,5)
g3 = c(4,5,5,6)
x <- c(g1,g2, g3)
# Gruppen als Faktorvariable
gr <- factor(rep(1:3,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
#(2) Processor - Part 1
#(a)
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(3) Processor - Part 2
m = 0
n = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
n = n + length(xi)
m = m + sum(xi)
}
m = m/n
m
sum1 = 0
sum2 = 0
for (i in seq(1,length(temp))) {
xi = temp[[i]]
sum1 = sum1 + length(xi)*(mean(xi)-m)^2
sum2 = sum2 + sum((xi-mean(xi))^2)
}
a = sum1/(length(temp)-1)
b = sum2/(n-(length(temp)))
f = a/b
f
p = 1-pf(f,length(temp)-1, n-length(temp))
p
# b) double check with anova
# Gruppengroessen als Vektor (k Gruppen)
ni <- c(13,15,24,11,14)
# Daten als Vektor , erst alle aus Gruppe 1, dann Gruppe 2 usw.
x <- c(temp[[1]],temp[[2]], temp[[3]], temp[[4]], temp[[5]])
# Gruppen als Faktorvariable
gr <- factor(rep(1:5,ni))
# ANOVA durchfuehren (F-Test)
anova(aov(x~gr))
#(4) Processor - Part 3
#(a)
m = choose(length(temp), 2)
m
#(b)
for (i in seq(1, length(temp)-1)) {
for (j in seq(i+1, length(temp))) {
xi = temp[[i]]
xj = temp[[j]]
p = t.test(xi, xj)$p.value
cat("Test ", i, " and ", j, "; without correction:", p, ";\t with correction:", p*m, "\n")
}
}
#(7) Distribution of the P-value in simulations
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i,m,i, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.4,m,i-0.4, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.4,m,i-0.4, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(3) Processor - Part 2
m = 0
n = 0
for (i in seq(1, length(temp))) {
xi = temp[[i]]
n = n + length(xi)
m = m + sum(xi)
}
m = m/n
m
sum1 = 0
par(mfrow=c(1,1))
load("/Users/Kathi/Desktop/TU/3. Semester/Statistik & Wahrscheinlichkeit/Repo/Statistik-R/temperatures.Rdata")
stripchart(temp,main="Heating of five different processors (in celsius)", method ="jitter",col=rainbow(5, alpha=0.5), pch=16)
colRain = rainbow(5, v = 0.8)
#(b)
for (i in seq(1,5)) {
xi = temp[[i]]
m = mean(xi)
sem = sd(xi)/sqrt(length(xi))
segments(m,i+0.3,m,i-0.3, col=colRain[i])
segments(m-sem,i+0.3,m-sem,i-0.3, col="red")
segments(m+sem,i+0.3,m+sem,i-0.3, col = "red")
}
#(7) Distribution of the P-value in simulations
c(rnorm(10), rnorm(10,1))
d = c(0, 0.25, 0.5)
par(mfrow=c(3,1))
for (t  in d) {
p = replicate(10000, t.test(rnorm(20), rnorm(20,t))$p.value)
hist(p, probability = TRUE)
}
